---
export interface Props {
    primaryLinks: {
        title: string;
        link: any;
    } [];
}
const { primaryLinks } = Astro.props;
---

<aside id="sidebar" class="absolute md:relative bg-white w-3/5 md:w-1/3 lg:w-1/4 px-4 py-2 sm:p-6 flex flex-col flex-wrap gap-2 -left-[57%] md:left-10 border border-gray-200 rounded-md shadow-[#1018280F] shadow-lg sm:shadow-md transition-all duration-500">
            
    <div id="sidebar-toggle" class="md:hidden bg-white aspect-square h-8 absolute -right-5 top-3 border flex justify-center items-center border-gray-200 rounded-md cursor-pointer">
        <img id="sidebar-btn" src="/misc/chevron-double-right.svg" class="object-contain object-center transition-all duration-500" />
    </div>

    { primaryLinks.map(links => (
        <a 
            href={links.link}
            class={`text-gray-600 text-base font-sans ${Astro.url.pathname === links.link ? "bg-gray-100 font-semibold text-gray-900" : ""}`}
        >
            <div class="py-1 px-2 rounded-md hover:bg-gray-100">
                {links.title}
            </div>
        </a>
    )) }
</aside>

<script>
    const sidebar = document.getElementById("sidebar");
    const sidebarToggle = document.getElementById("sidebar-toggle");
    const sidebarBtn = document.getElementById("sidebar-btn");

    sidebarToggle?.addEventListener("click", () => {
        sidebar?.classList.toggle("-left-1");
        sidebar?.classList.toggle("-left-[57%]");
        sidebarBtn?.classList.toggle("-rotate-180");
    })
</script>